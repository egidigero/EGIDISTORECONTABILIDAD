// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plataforma {
  TN      // Tienda Nube
  ML      // Mercado Libre
  Directo // Venta Directa
}

enum MetodoPago {
  PagoNube
  MercadoPago
  Transferencia
  Efectivo
}

enum EstadoEnvio {
  Pendiente
  EnCamino
  Entregado
  Devuelto
  Cancelado
}

enum TipoMovimiento {
  Gasto
  OtroIngreso
}

model Producto {
  id             String  @id @default(cuid())
  modelo         String  @unique
  sku            String
  costoUnitarioARS Decimal @db.Decimal(10, 2)
  activo         Boolean @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relaciones
  ventas         Venta[]

  @@map("productos")
}

model Tarifa {
  id                String      @id @default(cuid())
  plataforma        Plataforma
  metodoPago        MetodoPago
  comisionPct       Decimal     @db.Decimal(5, 4) // Porcentaje con 4 decimales
  iibbPct           Decimal     @db.Decimal(5, 4)
  fijoPorOperacion  Decimal     @db.Decimal(10, 2)
  key               String      @unique // plataforma|metodoPago
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  @@unique([plataforma, metodoPago])
  @@map("tarifas")
}

model Venta {
  id                    String      @id @default(cuid())
  fecha                 DateTime    @default(now())
  comprador             String
  tipoOperacion         String      @default("Venta")
  plataforma            Plataforma
  metodoPago            MetodoPago
  productoId            String
  pvBruto               Decimal     @db.Decimal(10, 2)
  cargoEnvioCosto       Decimal     @db.Decimal(10, 2) @default(0)
  
  // Campos calculados automáticamente
  comision              Decimal     @db.Decimal(10, 2)
  iibb                  Decimal     @db.Decimal(10, 2)
  precioNeto            Decimal     @db.Decimal(10, 2)
  costoProducto         Decimal     @db.Decimal(10, 2)
  ingresoMargen         Decimal     @db.Decimal(10, 2)
  rentabilidadSobrePV   Decimal     @db.Decimal(5, 4)
  rentabilidadSobreCosto Decimal    @db.Decimal(5, 4)
  
  // Campos de envío y tracking
  trackingUrl           String?
  estadoEnvio           EstadoEnvio @default(Pendiente)
  courier               String?
  externalOrderId       String?
  saleCode              String      @unique
  
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt

  // Relaciones
  producto              Producto    @relation(fields: [productoId], references: [id])
  devoluciones          Devolucion[]

  @@map("ventas")
}

model Liquidacion {
  id                String   @id @default(cuid())
  fecha             DateTime @unique
  dineroFP          Decimal  @db.Decimal(10, 2) @default(0)
  disponibleMP_MELI Decimal  @db.Decimal(10, 2) @default(0)
  aLiquidarMP       Decimal  @db.Decimal(10, 2) @default(0)
  liquidadoMP       Decimal  @db.Decimal(10, 2) @default(0)
  aLiquidarTN       Decimal  @db.Decimal(10, 2) @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("liquidaciones")
}

model GastoIngreso {
  id          String         @id @default(cuid())
  fecha       DateTime       @default(now())
  canal       Plataforma?    // Puede ser null para "General"
  tipo        TipoMovimiento
  categoria   String
  descripcion String
  montoARS    Decimal        @db.Decimal(10, 2)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@map("gastos_ingresos")
}

model Devolucion {
  id                String     @id @default(cuid())
  fecha             DateTime   @default(now())
  ventaId           String
  plataforma        Plataforma
  motivo            String
  estado            String
  montoDevuelto     Decimal    @db.Decimal(10, 2)
  costoEnvioIda     Decimal    @db.Decimal(10, 2) @default(0)
  costoEnvioVuelta  Decimal    @db.Decimal(10, 2) @default(0)
  recuperoProducto  Boolean    @default(false)
  observaciones     String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  // Relaciones
  venta             Venta      @relation(fields: [ventaId], references: [id])

  @@map("devoluciones")
}
